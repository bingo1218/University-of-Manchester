geom_smooth(method = lm)+
facet_wrap(~ppp, scales = "free_y")
my_data_stat_d1 %>%
filter(total_deaths_per_million < 1000)
my_data_stat_d1 %>%
filter(total_deaths_per_million < 1000) %>%
ggplot(aes(x = PH_group:EM_group, y = total_deaths_per_million, colour = PH_group:EM_group)) +
geom_jitter(shape = 21,
width = .2,
alpha = 2,
size = 2) +
geom_boxplot(alpha = .5) +
facet_wrap(~ppp, scales = "free_y")
my_data_stat_d1 %>%
filter(total_deaths_per_million < 1000) %>%
ggplot(aes(x = PH_group:EM_group, y = total_deaths_per_million, colour = PH_group:EM_group)) +
geom_jitter(shape = 21,
width = .2,
alpha = 2,
size = 2) +
geom_boxplot(alpha = .5) +
facet_wrap(~ppp, scales = "free_y") +
labs(title = "Response Time in Different Conditions",
x = "Public Health x Economic Measurement Response score",
y = "Total Deaths (per million)")
my_data_stat_d1 %>%
filter(total_deaths_per_million < 1000) %>%
ggplot(aes(x = PH_group:EM_group, y = total_deaths_per_million, colour = PH_group:EM_group)) +
geom_jitter(shape = 21,
width = .2,
alpha = 2,
size = 2) +
geom_boxplot(alpha = .5)  +
theme(axis.text.x = element_text(angle = 20, vjust = .5, hjust = .5)) +
facet_wrap(~ppp, scales = "free_y") +
labs(title = "Response Time in Different Conditions",
x = "Public Health x Economic Measurement Response score",
y = "Total Deaths (per million)")
my_data_stat_d1 %>%
filter(total_deaths_per_million < 1000) %>%
ggplot(aes(x = PH_group:EM_group, y = total_deaths_per_million, colour = PH_group:EM_group)) +
geom_jitter(shape = 21,
width = .2,
alpha = 2,
size = 2) +
geom_boxplot(alpha = .5)  +
theme(axis.text.x = element_text(angle = 20, vjust = .5, hjust = .5)) +
facet_wrap(~ppp, scales = "free_y") +
guides(color = 'none')
labs(title = "Response Time in Different Conditions",
x = "Public Health x Economic Measurement Response score",
y = "Total Deaths (per million)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 20, vjust = .5, hjust = .5))
my_data_stat_d1 %>%
filter(total_deaths_per_million < 1000) %>%
ggplot(aes(x = PH_group:EM_group,
y = total_deaths_per_million,
colour = PH_group:EM_group)) +
geom_jitter(shape = 21,
width = .2,
alpha = 2,
size = 2) +
geom_boxplot(alpha = .5)  +
facet_wrap(~ppp, scales = "free_y") +
guides(color = 'none')+
labs(title = "Response Time in Different Conditions",
x = "Public Health x Economic Measurement Response score",
y = "Total Deaths (per million)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 20, vjust = .5, hjust = .5))
my_data_stat_d2 %>%
#filter(total_deaths_per_million < 1000) %>%
ggplot(aes(x = PH_group:EM_group,
y = total_deaths_per_million,
colour = PH_group:EM_group)) +
geom_jitter(shape = 21,
width = .2,
alpha = 2,
size = 2) +
geom_boxplot(alpha = .5)  +
facet_wrap(~ppp, scales = "free_y") +
guides(color = 'none')+
labs(title = "Response Time in Different Conditions",
x = "Public Health x Economic Measurement Response score",
y = "Total Deaths (per million)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 20, vjust = .5, hjust = .5))
my_data_stat_d2 %>%
filter(total_deaths_per_million < 2000) %>%
ggplot(aes(x = PH_group:EM_group,
y = total_deaths_per_million,
colour = PH_group:EM_group)) +
geom_jitter(shape = 21,
width = .2,
alpha = 2,
size = 2) +
geom_boxplot(alpha = .5)  +
facet_wrap(~ppp, scales = "free_y") +
guides(color = 'none')+
labs(title = "Response Time in Different Conditions",
x = "Public Health x Economic Measurement Response score",
y = "Total Deaths (per million)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 20, vjust = .5, hjust = .5))
lmm_d1 <- lm(total_cases_per_million ~ PH_group * EM_group,
data = my_data_stat_d1)
lmm_d2 <- lm(total_cases_per_million ~ PH_group * EM_group,
data = my_data_stat_d2)
summary(lmm_d1)
my_data_stat_d1 %>%
filter(total_deaths_per_million < 1000) %>%
ggplot(aes(x = PH_group:EM_group,
y = total_deaths_per_million,
colour = PH_group:EM_group)) +
geom_jitter(shape = 21,
width = .2,
alpha = 2,
size = 2) +
geom_boxplot(alpha = .5)  +
facet_wrap(~ppp, scales = "free_y") +
guides(color = 'none')+
labs(title = "Response Time in Different Conditions",
x = "Public Health x Economic Measurement Response score",
y = "Total Deaths (per million)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 20, vjust = .5, hjust = .5))
set.seed(123)
my_data_stat_d1 %>%
filter(total_deaths_per_million < 1000) %>%
ggplot(aes(x = PH_group:EM_group,
y = total_deaths_per_million,
colour = PH_group:EM_group)) +
geom_jitter(shape = 21,
width = .2,
alpha = 2,
size = 2) +
geom_boxplot(alpha = .5)  +
facet_wrap(~ppp, scales = "free_y") +
guides(color = 'none')+
labs(title = "Response Time in Different Conditions",
x = "Public Health x Economic Measurement Response score",
y = "Total Deaths (per million)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 20, vjust = .5, hjust = .5))
my_data_stat_d2 %>%
filter(total_deaths_per_million < 2000) %>%
ggplot(aes(x = PH_group:EM_group,
y = total_deaths_per_million,
colour = PH_group:EM_group)) +
geom_jitter(shape = 21,
width = .2,
alpha = 2,
size = 2) +
geom_boxplot(alpha = .5)  +
facet_wrap(~ppp, scales = "free_y") +
guides(color = 'none')+
labs(title = "Response Time in Different Conditions",
x = "Public Health x Economic Measurement Response score",
y = "Total Deaths (per million)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 20, vjust = .5, hjust = .5))
set.seed(123)
my_data_stat_d1 %>%
filter(total_deaths_per_million < 1000) %>%
ggplot(aes(x = PH_group:EM_group,
y = total_deaths_per_million,
colour = PH_group:EM_group)) +
geom_jitter(shape = 21,
width = .2,
alpha = 2,
size = 2) +
geom_boxplot(alpha = .5)  +
facet_wrap(~ppp, scales = "free_y") +
guides(color = 'none')+
labs(title = "Response Time in Different Conditions at April 15, 2020",
x = "Public Health x Economic Measurement Response score",
y = "Total Deaths (per million)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 20, vjust = .5, hjust = .5))
my_data_stat_d2 %>%
filter(total_deaths_per_million < 2000) %>%
ggplot(aes(x = PH_group:EM_group,
y = total_deaths_per_million,
colour = PH_group:EM_group)) +
geom_jitter(shape = 21,
width = .2,
alpha = 2,
size = 2) +
geom_boxplot(alpha = .5)  +
facet_wrap(~ppp, scales = "free_y") +
guides(color = 'none')+
labs(title = "Response Time in Different Conditions at September 15, 2020",
x = "Public Health x Economic Measurement Response score",
y = "Total Deaths (per million)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 20, vjust = .5, hjust = .5))
View(covid_data)
my_data_stat_d2 %>%
filter(total_cases_per_million < 2000) %>%
ggplot(aes(x = PH_group:EM_group,
y = total_deaths_per_million,
colour = PH_group:EM_group)) +
geom_jitter(shape = 21,
width = .2,
alpha = 2,
size = 2) +
geom_boxplot(alpha = .5)  +
facet_wrap(~ppp, scales = "free_y") +
guides(color = 'none')+
labs(title = "Response Time in Different Conditions at September 15, 2020",
x = "Public Health x Economic Measurement Response score",
y = "Total Deaths (per million)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 20, vjust = .5, hjust = .5))
my_data_stat_d1 %>%
filter(total_cases_per_million < 1000) %>%
ggplot(aes(x = PH_group:EM_group,
y = total_deaths_per_million,
colour = PH_group:EM_group)) +
geom_jitter(shape = 21,
width = .2,
alpha = 2,
size = 2) +
geom_boxplot(alpha = .5)  +
facet_wrap(~ppp, scales = "free_y") +
guides(color = 'none')+
labs(title = "Response Time in Different Conditions at April 15, 2020",
x = "Public Health x Economic Measurement Response score",
y = "Total Deaths (per million)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 20, vjust = .5, hjust = .5))
my_data_stat_d1 %>%
#filter(total_cases_per_million < 1000) %>%
ggplot(aes(x = PH_group:EM_group,
y = total_deaths_per_million,
colour = PH_group:EM_group)) +
geom_jitter(shape = 21,
width = .2,
alpha = 2,
size = 2) +
geom_boxplot(alpha = .5)  +
facet_wrap(~ppp, scales = "free_y") +
guides(color = 'none')+
labs(title = "Response Time in Different Conditions at April 15, 2020",
x = "Public Health x Economic Measurement Response score",
y = "Total Deaths (per million)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 20, vjust = .5, hjust = .5))
my_data_stat_d1 %>%
#filter(total_cases_per_million < 1000) %>%
ggplot(aes(x = PH_group:EM_group,
y = total_cases_per_million,
colour = PH_group:EM_group)) +
geom_jitter(shape = 21,
width = .2,
alpha = 2,
size = 2) +
geom_boxplot(alpha = .5)  +
facet_wrap(~ppp, scales = "free_y") +
guides(color = 'none')+
labs(title = "Response Time in Different Conditions at April 15, 2020",
x = "Public Health x Economic Measurement Response score",
y = "Total Deaths (per million)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 20, vjust = .5, hjust = .5))
my_data_stat_d1 %>%
filter(total_cases_per_million < 6000) %>%
ggplot(aes(x = PH_group:EM_group,
y = total_cases_per_million,
colour = PH_group:EM_group)) +
geom_jitter(shape = 21,
width = .2,
alpha = 2,
size = 2) +
geom_boxplot(alpha = .5)  +
facet_wrap(~ppp, scales = "free_y") +
guides(color = 'none')+
labs(title = "Response Time in Different Conditions at April 15, 2020",
x = "Public Health x Economic Measurement Response score",
y = "Total Deaths (per million)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 20, vjust = .5, hjust = .5))
lmm_d1 <- lm(total_cases_per_million ~ PH_group * EM_group,
data = my_data_stat_d1)
summary(lmm_d1)
lmm_d1 <- lm(total_cases_per_million ~ PH_group * EM_group * ppp,
data = my_data_stat_d1)
summary(lmm_d1)
lmm_d2 <- lm(total_cases_per_million ~ PH_group * EM_group* ppp,
data = my_data_stat_d2)
summary(lmm_d2)
lmm_d1 <- lm(total_cases_per_million ~ PH_group * EM_group * ppp,
data = my_data_stat_d1)
?emmeans
library(emmeans)
?emmeans
emmeans(lmm_d1, ~ PH_group * EM_group * ppp, adjust = "none")
emmeans(lmm_d1, pairwise ~ PH_group * EM_group * ppp, adjust = "none")
emmeans(lmm_d1, pairwise ~ PH_group * EM_group * ppp, adjust = "none")
lmm_high_d1 <- lm(total_cases_per_million ~ PH_group * EM_group * ppp,
data = filter(my_data_stat_d1, ppp == "low"))
filter(my_data_stat_d1, ppp == "low")
lmm_high_d1 <- lm(total_cases_per_million ~ PH_group * EM_group,
data = filter(my_data_stat_d1, ppp == "low"))
lmm_high_d1 <- lm(total_cases_per_million ~ PH_group * EM_group,
data = filter(my_data_stat_d1, ppp == "high"))
lmm_low_d1 <- lm(total_cases_per_million ~ PH_group * EM_group,
data = filter(my_data_stat_d1, ppp == "low"))
lmm_high_d2 <- lm(total_cases_per_million ~ PH_group * EM_group,
data = filter(my_data_stat_d2, ppp == "high"))
lmm_low_d2 <- lm(total_cases_per_million ~ PH_group * EM_group,
data = filter(my_data_stat_d2, ppp == "low"))
summary(lmm_high_d1)
summary(lmm_high_d2)
summary(lmm_low_d1)
summary(lmm_low_d2)
summary(lmm_high_d1)
summary(lmm_high_d1)
emmeans(lmm_high_d1, pairwise ~ PH_group * EM_group, adjust = "none")
emmeans(lmm_high_d2, pairwise ~ PH_group * EM_group, adjust = "none")
emmeans(lmm_low_d1, pairwise ~ PH_group * EM_group, adjust = "none")
emmeans(lmm_low_d2, pairwise ~ PH_group * EM_group, adjust = "none")
lmm_high_d1 <- lm(total_cases_per_million ~ PH_group * EM_group,
data = filter(my_data_stat_d1, ppp == "high"))
summary(lmm_high_d1)
summary(lmm_high_d2)
summary(lmm_low_d1)
summary(lmm_low_d2)
summary(lmm_high_d1)
my_data_stat_d1 %>%
filter(total_cases_per_million < 6000) %>%
ggplot(aes(x = PH_group:EM_group,
y = total_cases_per_million,
colour = PH_group:EM_group)) +
geom_jitter(shape = 21,
width = .2,
alpha = 2,
size = 2) +
geom_boxplot(alpha = .5)  +
facet_wrap(~ppp, scales = "free_y") +
guides(color = 'none')+
labs(title = "Response Time in Different Conditions at April 15, 2020",
x = "Public Health x Economic Measurement Response score",
y = "Total Deaths (per million)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 20, vjust = .5, hjust = .5))
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(gganimate)
library(rworldmap)
library(plotly)
library(ggpubr)
library(cowplot)
covid_data <- read_csv("owid_covid_data.csv") %>%
select(iso_code, date, population, population_density, gdp_per_capita,
total_cases_per_million, new_cases,
total_deaths_per_million, new_deaths) %>%
rename(id = iso_code) %>%
mutate(t_date = as.Date(date))
Government_response_all <- read_csv("Gov_Responses2Covid19_2021.csv")
Government_response <- Government_response_all %>%
rename(region = country, t_date = d) %>%
select(region, t_date, id, Rigidity_Public_Health, Economic_Measures)
my_data_all <- Government_response %>%
left_join(covid_data, by = c('id','t_date')) %>%
filter(!is.na(population))
my_data_all <- left_join(Government_response, covid_data, by = c('id','t_date'))
my_data_gif <- my_data_all %>%
rename(iso3c = id)
map_gif <- joinCountryData2Map(my_data_gif, joinCode = "ISO3", nameJoinColumn = "iso3c")
map_gif_poly <- fortify(map_gif) #extract polygons
map_gif_poly <- merge(map_gif_poly, map_gif@data, by.x="id", by.y="ADMIN", all.x=T)
map_poly_all <- map_gif_poly %>%
arrange(id, order) %>%
select(REGION, ISO3.1) %>%
rename(id = ISO3.1, continent = REGION) %>%
distinct()
my_data_gif_all <- left_join(my_data_all, map_poly_all, by = 'id') %>%
filter(!is.na(continent) & t_date <= as.Date("2021-05-15"))
my_data_mean <- my_data_all %>%
filter(!is.na(gdp_per_capita)) %>%
mutate(total_cases_per_million =
ifelse(is.na(total_cases_per_million),
0,
total_cases_per_million))%>%
mutate(ppp =
factor(ifelse(gdp_per_capita < median(gdp_per_capita,
na.rm = TRUE),"low","high"))) %>%
group_by(t_date, ppp) %>%
summarise(PH_mean = mean(Rigidity_Public_Health),
EM_mean = mean(Economic_Measures),
case_mean = mean(total_cases_per_million))
ph_plot <- my_data_mean %>%
ggplot() +
geom_smooth(aes(x = t_date, y = PH_mean, color = ppp),
method = 'loess',
se = FALSE) +
scale_x_date(date_breaks = "4 months" , date_labels = "%y-%m") +
theme_classic() +
theme(legend.position="none")
em_plot <- my_data_mean %>%
ggplot() +
geom_smooth(aes(x = t_date, y = EM_mean, color = ppp),
method = 'loess',
se = FALSE) +
scale_x_date(date_breaks = "4 months" , date_labels = "%y-%m") +
theme_classic()+
theme(legend.position="none")
case_plot <- my_data_mean %>%
ggplot() +
geom_smooth(aes(x = t_date, y = case_mean, color = ppp),
method = 'loess',
se = FALSE) +
scale_x_date(date_breaks = "4 months" , date_labels = "%y-%m") +
theme_classic()
ph_plot <- ggplotly(ph_plot)
em_plot <- ggplotly(em_plot)
case_plot <- ggplotly(case_plot)
subplot(ph_plot, em_plot, case_plot, nrows = 3, margin = 0.04)%>%
layout(title= list(text = "The development of government' response and COVID cases with time passing by", font = list(
family = "Aria",
color = "Black",
size = 15)))
my_data_stat <- my_data_all %>%
mutate(t_date = factor(t_date)) %>%
filter(t_date == '2020-04-15' |
t_date == '2020-09-15' ) %>%
mutate(t_date = recode(t_date,'2020-04-15' = "d1",
'2020-09-15' = 'd2')) %>%
rename(iso3c = id)
map_d1 <- joinCountryData2Map(filter(my_data_stat, t_date == 'd1'), joinCode = "ISO3", nameJoinColumn = "iso3c")
map_d2 <- joinCountryData2Map(filter(my_data_stat, t_date == 'd2'), joinCode = "ISO3", nameJoinColumn = "iso3c")
map_d3 <- joinCountryData2Map(filter(my_data_stat, t_date == 'd3'), joinCode = "ISO3", nameJoinColumn = "iso3c")
map_d1_poly <- fortify(map_d1) #extract polygons
map_d2_poly <- fortify(map_d2) #extract polygons
map_d3_poly <- fortify(map_d3) #extract polygons
map_d1_poly <- merge(map_d1_poly, map_d1@data, by.x="id", by.y="ADMIN", all.x=T)
map_d2_poly <- merge(map_d2_poly, map_d2@data, by.x="id", by.y="ADMIN", all.x=T)
map_d3_poly <- merge(map_d3_poly, map_d3@data, by.x="id", by.y="ADMIN", all.x=T)
map_d1_poly <- map_d1_poly %>% arrange(id, order)
map_d2_poly <- map_d2_poly %>% arrange(id, order)
map_d3_poly <- map_d3_poly %>% arrange(id, order)
my_data_stat_d1 <- my_data_stat %>%
filter(!is.na(gdp_per_capita)) %>%
filter(t_date == 'd1')%>%
mutate(PH_group =
ifelse(Rigidity_Public_Health <
median(Rigidity_Public_Health, na.rm = TRUE),"low_PH","high_PH"),
EM_group =
ifelse(Economic_Measures <
median(Economic_Measures, na.rm = TRUE),"low_Econ","high_Econ"),
ppp =
ifelse(gdp_per_capita <
median(gdp_per_capita,na.rm = TRUE),"low","high")) %>%
mutate(PH_group = factor(PH_group),
EM_group = factor(EM_group),
ppp = factor(ppp))
my_data_stat_d2 <- my_data_stat %>%
filter(!is.na(gdp_per_capita)) %>%
filter(t_date == 'd2')%>%
mutate(PH_group =
ifelse(Rigidity_Public_Health <
median(Rigidity_Public_Health, na.rm = TRUE),"low_PH","high_PH"),
EM_group =
ifelse(Economic_Measures <
median(Economic_Measures, na.rm = TRUE),"low_Econ","high_Econ"),
ppp =
ifelse(gdp_per_capita <
median(gdp_per_capita,na.rm = TRUE),"low","high")) %>%
mutate(PH_group = factor(PH_group),
EM_group = factor(EM_group),
ppp = factor(ppp))
set.seed(123)
my_data_stat_d1 %>%
filter(total_cases_per_million < 6000) %>%
ggplot(aes(x = PH_group:EM_group,
y = total_cases_per_million,
colour = PH_group:EM_group)) +
geom_jitter(shape = 21,
width = .2,
alpha = 2,
size = 2) +
geom_boxplot(alpha = .5)  +
facet_wrap(~ppp, scales = "free_y") +
guides(color = 'none')+
labs(title = "Response Time in Different Conditions at April 15, 2020",
x = "Public Health x Economic Measurement Response score",
y = "Total Deaths (per million)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 20, vjust = .5, hjust = .5))
my_data_stat_d2 %>%
filter(total_cases_per_million < 2000) %>%
ggplot(aes(x = PH_group:EM_group,
y = total_deaths_per_million,
colour = PH_group:EM_group)) +
geom_jitter(shape = 21,
width = .2,
alpha = 2,
size = 2) +
geom_boxplot(alpha = .5)  +
facet_wrap(~ppp, scales = "free_y") +
guides(color = 'none')+
labs(title = "Response Time in Different Conditions at September 15, 2020",
x = "Public Health x Economic Measurement Response score",
y = "Total Deaths (per million)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 20, vjust = .5, hjust = .5))
View(my_data_stat_d1)
library(rmdformats)
install.packages("rmdformats")
install.packages("rmdformats")
